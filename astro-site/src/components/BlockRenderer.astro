---
import { marked } from "marked";

import type {
  ComponentSharedMedia,
  ComponentSharedRichText,
  ComponentSharedSpecialComponent,
} from "../graphql/graphql";
import { externalStrapiUrl } from "../consts";
import RisoColors from "./RisoColors.astro";

/* prettier-ignore */
export type Block = ComponentSharedMedia | ComponentSharedRichText | ComponentSharedSpecialComponent;
interface Props {
  blocks: Block[];
}

const { blocks } = Astro.props;

const generateFilterStyle = (block: ComponentSharedMedia) => {
  return {
    filter: block.filter!,
  };
};

const generateStyle = (block: ComponentSharedMedia) => {
  const rotation = typeof block.rotation === "number" ? block.rotation : 0;
  const border = typeof block.border === "string" ? block.border : "none";
  const margin = typeof block.margin === "string" ? block.margin : "0 auto";
  return {
    transform: `rotate(${rotation}deg)`,
    border,
    width: block.width,
    height: block.height,
    padding: block.padding,
    margin,
  };
};
---

<article class="prose lg:prose-xl w-full flex flex-col gap-4">
  {
    blocks.map((block) =>
      block.__typename === "ComponentSharedMedia" ? (
        Array.isArray(block.adornments) && block.adornments.length > 0 ? (
          <div style={generateStyle(block)} class="relative not-prose">
            <img
              src={`${externalStrapiUrl}${block.file!.url}`}
              alt={block.file!.alternativeText}
              style={generateFilterStyle(block)}
            />
            {block.adornments.map((adornment, idx) => (
              <img
                src={`${externalStrapiUrl}${adornment!.media!.file.url}`}
                alt={adornment!.media!.file.alternativeText}
                style={{
                  position: "absolute",
                  left: adornment!.media!.left,
                  top: adornment!.media!.top,
                  bottom: adornment!.media!.bottom,
                  right: adornment!.media!.right,
                  width: adornment!.media!.width,
                  height: adornment!.media!.height,
                  padding: adornment!.media!.padding,
                  margin: adornment!.media!.margin,
                  ...(adornment!.media!.rotation !== undefined
                    ? { transform: `rotate(${adornment!.media!.rotation}deg)` }
                    : {}),
                  ...(adornment!.media!.filter !== undefined
                    ? { filter: adornment!.media!.filter }
                    : {}),
                }}
              />
            ))}
          </div>
        ) : (
          <img
            src={`${externalStrapiUrl}${block.file!.url}`}
            alt={block.file!.alternativeText}
            style={{
              ...generateStyle(block),
              ...generateFilterStyle(block),
            }}
          />
        )
      ) : block.__typename === "ComponentSharedRichText" ? (
        <Fragment set:html={marked.parse(block.body!)} />
      ) : block.__typename === "ComponentSharedSpecialComponent" &&
        block.type === "riso_colors" ? (
        <RisoColors />
      ) : null
    )
  }
</article>

<style>
  img {
    height: 100%;
  }
</style>
